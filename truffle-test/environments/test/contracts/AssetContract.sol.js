// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":true,"inputs":[],"name":"assetTitle","outputs":[{"name":"","type":"string"}],"type":"function"},{"constant":true,"inputs":[],"name":"creator","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":true,"inputs":[],"name":"time","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"streamer","type":"address"},{"name":"jaaker","type":"address"}],"name":"requestAsset","outputs":[{"name":"assetID","type":"bytes32"}],"type":"function"},{"constant":true,"inputs":[],"name":"verified","outputs":[{"name":"","type":"bool"}],"type":"function"},{"constant":true,"inputs":[],"name":"assetPrice","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"jaakCount","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"playbackCount","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"inputs":[{"name":"_creator","type":"address"},{"name":"_assetTitle","type":"string"},{"name":"_assetPrice","type":"uint256"},{"name":"_assetID","type":"bytes32"},{"name":"_time","type":"uint256"}],"type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"_from","type":"address"},{"indexed":false,"name":"_playbackCount","type":"uint256"}],"name":"AssetRetrieved","type":"event"}],
    binary: "60606040526040516103cc3803806103cc83398101604052805160805160a05160c05160e051939492909201929091906080805160008054600160a060020a0319168817815586516002805492819052936020601f600019600186161561010002019094168690048401047f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90810194929390929091019083901061012957805160ff19168380011785555b506100c79291505b8082111561015957600081556001016100b3565b5050826001600050819055508160036000508190555080600460005081905550600060056000508190555060006006600050819055506000600760006101000a81548160ff02191690830217905550505050505061026f8061015d6000396000f35b828001600101855582156100ab579182015b828111156100ab57825182600050559160200191906001019061013b565b5090566060604052361561006c5760e060020a600035046302c3c377811461006e57806302d05d3f146100c757806316ada547146100e657806341aa80d8146100ef578063bbb82d891461012c578063d24378eb14610138578063d88e2bbb14610141578063db4fd27f1461014a575b005b610153600280546020601f600183161561010002600019019092168390049182018190040260809081016040526060828152929190828280156102025780601f106101d757610100808354040283529160200191610202565b6101c160005473ffffffffffffffffffffffffffffffffffffffff1681565b6101c160045481565b6101c160043560243560015460009034101561020a57507f3078300000000000000000000000000000000000000000000000000000000000610269565b6101cb60075460ff1681565b6101c160015481565b6101c160065481565b6101c160055481565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156101b35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6060908152602090f35b15156060908152602090f35b820191906000526020600020905b8154815290600101906020018083116101e557829003601f168201915b505050505081565b6005805460019081019182905560068054909101905573ffffffffffffffffffffffffffffffffffffffff841660609081526080919091527fb3ec55f3ec5648b034e307145430f14519d480407750d2666e106d2fb763bf7e90604090a15b9291505056",
    unlinked_binary: "60606040526040516103cc3803806103cc83398101604052805160805160a05160c05160e051939492909201929091906080805160008054600160a060020a0319168817815586516002805492819052936020601f600019600186161561010002019094168690048401047f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90810194929390929091019083901061012957805160ff19168380011785555b506100c79291505b8082111561015957600081556001016100b3565b5050826001600050819055508160036000508190555080600460005081905550600060056000508190555060006006600050819055506000600760006101000a81548160ff02191690830217905550505050505061026f8061015d6000396000f35b828001600101855582156100ab579182015b828111156100ab57825182600050559160200191906001019061013b565b5090566060604052361561006c5760e060020a600035046302c3c377811461006e57806302d05d3f146100c757806316ada547146100e657806341aa80d8146100ef578063bbb82d891461012c578063d24378eb14610138578063d88e2bbb14610141578063db4fd27f1461014a575b005b610153600280546020601f600183161561010002600019019092168390049182018190040260809081016040526060828152929190828280156102025780601f106101d757610100808354040283529160200191610202565b6101c160005473ffffffffffffffffffffffffffffffffffffffff1681565b6101c160045481565b6101c160043560243560015460009034101561020a57507f3078300000000000000000000000000000000000000000000000000000000000610269565b6101cb60075460ff1681565b6101c160015481565b6101c160065481565b6101c160055481565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156101b35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6060908152602090f35b15156060908152602090f35b820191906000526020600020905b8154815290600101906020018083116101e557829003601f168201915b505050505081565b6005805460019081019182905560068054909101905573ffffffffffffffffffffffffffffffffffffffff841660609081526080919091527fb3ec55f3ec5648b034e307145430f14519d480407750d2666e106d2fb763bf7e90604090a15b9291505056",
    address: "",
    generated_with: "2.0.9",
    contract_name: "AssetContract"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("AssetContract error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("AssetContract error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("AssetContract error: Please call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("AssetContract error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.AssetContract = Contract;
  }

})();
